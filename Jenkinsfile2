node {
  def app
  stage('SCM') {
    checkout scm
  }
  stage('Build Jar') {
    def mvn = tool 'maven';
    sh "${mvn}/bin/mvn clean install"
  }
  stage('SonarQube Analysis') {
    def mvn = tool 'maven';
    withSonarQubeEnv() {
      sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=firms -Dsonar.projectName='firms' -Dsonar.token=sqa_86267af9a6f565ff8c074a14d32bcfad16adfd5c"
    }
  }

  stage('OWASP Vulnerability SCAN') {
      dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
      dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
  }

  stage('Build Docker Image') {
    
  }

  stage('Start Docker container') {
    sh 'docker ps -f name=firms -q | xargs --no-run-if-empty docker container stop'
    sh 'docker container ls -a -fname=firms -q | xargs -r docker container rm'
    sh 'docker run -d --name firm -p 8081:8081 firm:latest'
  }

  stage('Scan security vulnerabilities') {
  }
}
